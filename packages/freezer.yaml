homeassistant:
  customize:
    sensor.freezer:
      icon: mdi:fridge
    sensor.freezer_state:
      icon: mdi:fridge
    sensor.freezer_ds1:
      friendly_name: 'Freezer Temperature'
      icon: mdi:thermometer

device_tracker:
  - platform: ping
    hosts:
      freezer: 192.168.100.207

group:
  freezer:
      control: hidden
      name: Freezer TH16
      entities:
        - sensor.freezer
        - switch.freezer
        - sensor.freezer_ds1

sensor:
  - platform: template
    sensors:
      freezer:
        friendly_name: 'Freezer'
        value_template: "{{ 'Online' if is_state('device_tracker.freezer', 'home') else 'Offline' }}"
      freezer_safe:
        friendly_name: 'Safe Zone'
        value_template: -18
        unit_of_measurement: 'C'

  # - platform: mqtt
  #   state_topic: "tele/freezerplug/STATE"
  #   name: "freezerplug_state"
  #   value_template: "{{ value }}"
  # - platform: mqtt
  #   state_topic: "tele/freezerplug/STATE"
  #   name: "freezerplug_load"
  #   value_template: "{{ value_json.LoadAvg }}"
  - platform: mqtt
    state_topic: "stat/freezer/STATUS10"
    name: freezer_ds1
    # value_template: "{{ value_json.StatusSNS.DS18B20.Temperature | int * 9//5 + 32 }}"
    value_template: "{{ value_json.StatusSNS.DS18B20.Temperature | int }}"
    unit_of_measurement: 'C'
  - platform: mqtt
    state_topic: "tele/freezer/STATE"
    name: "Freezer Signal"
    unit_of_measurement: "%"
    value_template: "{{value_json['Wifi'].RSSI }}"
    availability_topic: "tele/freezer/LWT"
    payload_available: "Online"
    payload_not_available: "Offline"


input_boolean:
  freezer:
    name: Freezer
    initial: on

automation:
- alias: 'Freezer Check Temp'
  initial_state: True
  # condition:
  #   - condition: state
  #     entity_id: input_boolean.freezer
  #     state: 'on'
  #   - condition: template
  #     value_template: '{{ (as_timestamp(now()) - as_timestamp(states.input_boolean.freezer.last_changed)) > 300 }}'
  trigger:
    platform: time_pattern
    minutes: '/1'
    seconds: 00
  action:
      - service: shell_command.query_freezer

- alias: 'Freezer Temp High'
  initial_state: True
  trigger:
    platform: numeric_state
    entity_id: sensor.freezer_ds1
    # At least one of the following required
    above: 40
    # below: 25
  condition:
    # - condition: state
    #   entity_id: input_boolean.freezer
    #   state: 'on'
    # - condition: template
    #   value_template: '{{ (as_timestamp(now()) - as_timestamp(states.sensor.freezer_ds1.last_changed)) > 300 }}'
  action:
    # - service: homeassistant.turn_on
    #   entity_id: input_boolean.freezer
    - service: logbook.log
      data_template:
        name: "Freezer Temp Alarm: "
        message: >-
          The freezer is currently at {{  states("sensor.freezer_ds1") }}°F degrees and triggering the notification.
    - service: notify.home
      data_template:
        message: >
         The freezer is currently at {{  states("sensor.freezer_ds1") }}°F degrees and should be checked.


shell_command:
  query_freezer: 'sudo bash /home/homeassistant/.homeassistant/shell/sonoff_getSNS.sh freezer'
