homeassistant:
  customize:
    device_tracker.raspberrypi:
      icon: mdi:fridge

# device_tracker:
#   - platform: ping
#     hosts:
#       freezer: 192.168.100.13

sensor:
  - platform: template
    sensors:
      freezer:
        friendly_name: 'Freezer'
        value_template: "{{ 'Online' if is_state('device_tracker.raspberrypi', 'home') else 'Offline' }}"

input_boolean:
  freezer:
    name: Freezer
    initial: on

automation:
- alias: 'Freezer Off'
  condition:
    - condition: state
      entity_id: input_boolean.freezer
      state: 'on'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.input_boolean.freezer.last_changed)) > 300 }}'
  trigger:
    - platform: state
      entity_id: device_tracker.raspberrypi
      to: 'Offline'
      for:
        minutes: 2
    - platform: state
      entity_id: device_tracker.raspberrypi
      to: 'Offline'
  action:
    - service: homeassistant.turn_off
      entity_id: input_boolean.freezer
    - service: logbook.log
      data_template:
        name: "Freezer Off: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is offline so the freezer might be off.
          {%- endfor -%}
    - service: notify.notify
      data_template:
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is offline so the freezer might be off.
          {%- endfor -%}

- alias: 'Freezer On'
  condition:
    - condition: state
      entity_id: input_boolean.freezer
      state: 'off'
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.input_boolean.freezer.last_changed)) > 300 }}'
  trigger:
    - platform: state
      entity_id: device_tracker.raspberrypi
      to: 'Online'
      for:
        minutes: 2
    - platform: state
      entity_id: device_tracker.raspberrypi
      to: 'Online'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.freezer
    - service: logbook.log
      data_template:
        name: "Freezer On: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is online so the freezer should be on.
          {%- endfor -%}
    - service: notify.notify
      data_template:
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} is online so the freezer should be on.
          {%- endfor -%}