homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'ecobee'

      exposed: &exposed
        <<: *customize
        emulated_hue: true
        homebridge_hidden: false
        critical: true

      not_exposed: &not_exposed
        <<: *customize
        emulated_hue: false
        homebridge_hidden: true
        critical: false

      hidden: &hidden
        <<: *customize
        hidden: true
        critical: false

    input_boolean.air_condition:
      <<: *exposed
      homebridge_name: Air Condition
      friendly_name: Set mode to AC
    input_boolean.heater:
      <<: *exposed
      homebridge_name: Heater
      friendly_name: Set mode to Heat

    weather.main_floor:
      friendly_name: Ecobee Weather forcast

ecobee:
  api_key: !secret ecobee_api_key

input_boolean:
  air_condition:
    name: Air Condition
    icon: mdi:snowflake
  heater:
    name: Heater
    icon: mdi:hot-tub

sensor:
  - platform: template
    sensors:
      main_floor_mode:
        friendly_name: "Main Floor AC Mode"
        value_template: "{{ states.climate.main_floor.attributes.operation }}"
      upstairs_mode:
        friendly_name: "Upstairs AC Mode"
        value_template: "{{ states.climate.upstairs.attributes.operation }}"
      mainfloor_temp_rounded:
        friendly_name: "Downstairs temperature"
        value_template: "{{states('sensor.main_floor_temperature')|round}}"
      upstairs_temp_rounded:
        friendly_name: "Upstairs temperature"
        value_template: "{{states('sensor.upstairs_temperature')|round}}"
      mainfloor_hvac_runtime:
        friendly_name: "Downstairs HVAC Runtime"
        unit_of_measurement: "h"
        value_template: >-
           {%- if [states.sensor.mainfloor_cool.state|float, states.sensor.mainfloor_heat.state|float, 0]|max != None -%}
             {{ [states.sensor.mainfloor_cool.state|float, states.sensor.mainfloor_heat.state|float, 0]|max }}
           {%- else -%}
             0
           {%- endif -%}
        icon_template: >-
          {%- if states('sensor.mainfloor_cool')|default(0) < states('sensor.mainfloor_heat')|default(0) -%}
            mdi:fire
          {%- elif states('sensor.mainfloor_cool')|default(0) > states('sensor.mainfloor_heat')|default(0) -%}
            mdi:snowflake
          {%- endif -%}
      upstairs_hvac_runtime:
        friendly_name: "Upstairs HVAC Runtime"
        unit_of_measurement: "h"
        value_template: >-
           {%- if [states.sensor.upstairs_cool.state|float, states.sensor.upstairs_heat.state|float, 0]|max != None -%}
             {{ [states.sensor.upstairs_cool.state|float, states.sensor.upstairs_heat.state|float, 0]|max }}
           {%- else -%}
             0
           {%- endif -%}
        icon_template: >-
          {%- if states('sensor.upstairs_cool')|default(0) < states('sensor.upstairs_heat')|default(0) -%}
            mdi:fire
          {%- elif states('sensor.upstairs_cool')|default(0) > states('sensor.upstairs_heat')|default(0) -%}
            mdi:snowflake
          {%- endif -%}

group:
  Climate:
    name: Climate controls
    view: yes
    icon: mdi:thermostat
    entities:
      - group.ecobee_main
      - group.ecobee_upstairs
      - group.climate_controls

  Ecobee Main:
    - binary_sensor.bedroom_occupancy
    - binary_sensor.office_occupancy
    - binary_sensor.main_floor_occupancy
    - binary_sensor.kitchen_occupancy
    - sensor.bedroom_temperature
    - sensor.office_temperature_2
    - sensor.kitchen_temerature
    - sensor.kitchen_humidity
    - sensor.main_floor_humidity
    - sensor.main_floor_temperature
    - climate.main_floor_operation
    - sensor.main_floor_mode

  Ecobee Upstairs:
    - climate.upstairs_operation
    - binary_sensor.bb_room_occupancy
    - binary_sensor.kent_room_occupancy
    - binary_sensor.upstairs_occupancy
    - sensor.bb_room_humility
    - sensor.bb_room_temperature
    - sensor.kent_room_humidity
    - sensor.kent_room_temperature
    - sensor.upstairs_humidity
    - sensor.upstairs_mode
    - sensor.upstairs_temperature

    # - automation.turn_off_ac_after_3_hours_of_cooling
    # - input_boolean.air_condition
    # - input_boolean.heater

  Climate controls:
    - automation.turn_off_ac_after_3_hours_of_cooling
    - input_boolean.air_condition
    - input_boolean.heater
    - automation.Ecobee_Status

automation:
# ###############################################################################
# # Turn OFF AC after 3 hours of cooling
# ###############################################################################
#   - alias: Turn Off AC After 3 Hours of Cooling
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: climate.main_floor
#         to: 'cool'
#         for: '03:00:00'
#     action:
#       - service: climate.set_operation_mode
#         data:
#           entity_id: climate.main_floor
#           operation_mode: 'off'
#       - service: script.notify_me
#         data_template:
#           message: "Air Condition has been ON for 3 hours.
#                     Turning it Off to save power."

# ###############################################################################
# # Set Thermostat status to Away mode when noone is away
# ###############################################################################
#   - alias: Ecobee Away Mode
#     initial_state: true
#     hide_entity: true
#     trigger:
#       platform: state
#       entity_id: alarm_control_panel.simplisafe
#     condition:
#       - condition: template
#         value_template: "{{ 'True' if trigger.from_state else 'False' }}"
#       - condition: template
#         value_template: '{{ states.alarm_control_panel.simplisafe.state != "unknown" }}'
#       - condition: template
#         value_template: '{{ states.alarm_control_panel.simplisafe.state | trim != "" }}'
#       - condition: template
#         value_template: '{{ states.alarm_control_panel.simplisafe.state | lower | trim == "armed_away" }}'
#     action:
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.main_floor
#           away_mode: true
#       - service: script.notify_me
#         data_template:
#           message: "Your Home Security System is now set to Away mode.
#                     Ecobee is set to AWAY mode as well."

###############################################################################
# Turn ON AC Or Heater On Demand
###############################################################################
  - alias: Turn ON AC Or Heater
    initial_state: true
    hide_entity: true
    trigger:
      - platform: state
        entity_id:
          - input_boolean.heater
          - input_boolean.air_condition
        to: 'on'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.main_floor
          operation_mode: "{{ 'cool' if trigger.entity_id == 'input_boolean.air_condition' else 'heat' }}"

###############################################################################
# Turn OFF AC Or Heater On Demand
###############################################################################
  - alias: Turn Off AC Or Heater
    initial_state: true
    hide_entity: true
    trigger:
      - platform: state
        entity_id:
          - input_boolean.heater
          - input_boolean.air_condition
        to: 'off'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.main_floor
          operation_mode: 'off'

  - alias: 'ecobee logger'
    initial_state: True
    trigger:
      platform: state
      entity_id:
        - sensor.main_floor_climate_mode
        - sensor.upstairs_climate_mode
    action:
      - service: logbook.log
        data_template:
          name: "Ecobee Activity: "
          message: >-
            {{ trigger.entity_id.attributes.friendly_name }} changed to {{(trigger.to_state.state)}} from {{(trigger.last_state)}}
      - service: notify.home
        data_template:
          message: >
            {{ trigger.entity_id.attributes.friendly_name }} changed to {{(trigger.to_state.state)}} from {{(trigger.last_state)}}

  - alias: 'Ecobee Status'
    trigger:
      - platform: state
        entity_id:
        - sensor.main_floor_mode
        - sensor.upstairs_mode
        from: 'idle'
    # condition:
    #   - condition: template
    #     value_template: >-
    #       {{ as_timestamp(states.automation.nest_status.attributes.last_triggered) > as_timestamp(now()) - (1800) }}
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.page_location
          option: 'Office'
      # - service: script.speech_engine
      #   data_template:
      #     EcobeeStatus: "The {{ trigger.entity_id.split('.')[1].split('_')[0]}} {{ trigger.entity_id.split('.')[1].split('_')[1]}} has now activated {{(trigger.to_state.state)}} mode."
      #     call_window_check: 1
