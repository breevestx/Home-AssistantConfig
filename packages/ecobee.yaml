homeassistant:
  customize:
    ################################################
    ## Node Anchors
    ################################################

    package.node_anchors:
      customize: &customize
        package: 'ecobee'

      exposed: &exposed
        <<: *customize
        emulated_hue: true
        homebridge_hidden: false
        critical: true

      not_exposed: &not_exposed
        <<: *customize
        emulated_hue: false
        homebridge_hidden: true
        critical: false

      hidden: &hidden
        <<: *customize
        hidden: true
        critical: false

    input_boolean.air_condition:
      <<: *exposed
      homebridge_name: Air Condition
      friendly_name: Set mode to AC
    input_boolean.heater:
      <<: *exposed
      homebridge_name: Heater
      friendly_name: Set mode to Heat

    weather.main_floor:
      friendly_name: Ecobee Weather forcast

ecobee:
  api_key: !secret ecobee_api_key

input_boolean:
  air_condition:
    name: Air Condition
    icon: mdi:snowflake
  heater:
    name: Heater
    icon: mdi:hot-tub

group:
  Ecobee:
    - binary_sensor.bedroom_occupancy
    - binary_sensor.downstairs_Occupancy
    - sensor.bedroom_temperature
    - sensor.downstairs_temperature
    - sensor.main_floor_humidity
    - sensor.main_floor_temperature
    - sensor.upstairs_humidity
    - sensor.upstairs_temperature
    - automation.turn_off_ac_after_3_hours_of_cooling
    - input_boolean.air_condition
    - input_boolean.heater

automation:
# ###############################################################################
# # Turn OFF AC after 3 hours of cooling
# ###############################################################################
#   - alias: Turn Off AC After 3 Hours of Cooling
#     initial_state: true
#     trigger:
#       - platform: state
#         entity_id: climate.main_floor
#         to: 'cool'
#         for: '03:00:00'
#     action:
#       - service: climate.set_operation_mode
#         data:
#           entity_id: climate.main_floor
#           operation_mode: 'off'
#       - service: script.notify_me
#         data_template:
#           message: "Air Condition has been ON for 3 hours.
#                     Turning it Off to save power."

# ###############################################################################
# # Set Thermostat status to Away mode when noone is away
# ###############################################################################
#   - alias: Ecobee Away Mode
#     initial_state: true
#     hide_entity: true
#     trigger:
#       platform: state
#       entity_id: alarm_control_panel.simplisafe
#     condition:
#       - condition: template
#         value_template: "{{ 'True' if trigger.from_state else 'False' }}"
#       - condition: template
#         value_template: '{{ states.alarm_control_panel.simplisafe.state != "unknown" }}'
#       - condition: template
#         value_template: '{{ states.alarm_control_panel.simplisafe.state | trim != "" }}'
#       - condition: template
#         value_template: '{{ states.alarm_control_panel.simplisafe.state | lower | trim == "armed_away" }}'
#     action:
#       - service: climate.set_away_mode
#         data:
#           entity_id: climate.main_floor
#           away_mode: true
#       - service: script.notify_me
#         data_template:
#           message: "Your Home Security System is now set to Away mode.
#                     Ecobee is set to AWAY mode as well."

###############################################################################
# Turn ON AC Or Heater On Demand
###############################################################################
  - alias: Turn ON AC Or Heater
    initial_state: true
    hide_entity: true
    trigger:
      - platform: state
        entity_id:
          - input_boolean.heater
          - input_boolean.air_condition
        to: 'on'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.main_floor
          operation_mode: "{{ 'cool' if trigger.entity_id == 'input_boolean.air_condition' else 'heat' }}"

###############################################################################
# Turn OFF AC Or Heater On Demand
###############################################################################
  - alias: Turn Off AC Or Heater
    initial_state: true
    hide_entity: true
    trigger:
      - platform: state
        entity_id:
          - input_boolean.heater
          - input_boolean.air_condition
        to: 'off'
    action:
      - service: climate.set_operation_mode
        data:
          entity_id: climate.main_floor
          operation_mode: 'off'
